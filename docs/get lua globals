                for (auto it = m_state.globals().begin(); it != m_state.globals().end(); ++it) {
                    auto [key, val] = *it;

                    auto type = val.get_type();
                    if (type == sol::type::number) {
                        spdlog::debug("{} {}", key.as<std::string>(), val.as<double>());
                    
                    } else if (type == sol::type::boolean) {
                        spdlog::debug("{} {}", key.as<std::string>(), val.as<bool>());

                    } else if (type == sol::type::string) {
                        spdlog::debug("{} {}", key.as<std::string>(), val.as<std::string>());
                    }
                    //assert(key);
                }